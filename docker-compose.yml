version: "3.3"
services:
  nginx:
    depends_on:
      - frontend
      - backend
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    ports:
      - '80:80'
    networks:
      - app-network

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    command: ng serve --proxy-config proxy.conf.json --host 0.0.0.0
    ports:
      - '4200:4200'
    volumes:
      - /node_modules
      - ./frontend/src:/app/src
    restart: on-failure
    container_name: frontend
    networks:
      - app-network

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    command: yarn start:dev
    depends_on:
      - redis
    ports:
      - '3001:3001'
    restart: on-failure
    container_name: backend
    volumes:
      - /node_modules
      - ./backend/src:/app/src
    networks:
      - app-network
    env_file:
      - ./backend/.env

  mongo:
    image: 'mongo'
    container_name: mongo-db
    ports:
      - '27017-27019:27017-27019'
    volumes:
      - ./db/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
      - ./db/mongo-volume:/data/db
    env_file:
      - ./backend/.env
    networks:
      - app-network

  redis:
    image: redis:latest
    container_name: redis
    command: [
        "redis-server",
        "--bind",
        "0.0.0.0",
        "--port",
        "6379"
    ]
    volumes:
      - red_data:/var/lib/redis
    ports:
      - '6379:6379'
    networks:
      - app-network

  es01:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es01
    environment:
      - node.name=es01
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es02,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data01:/usr/share/elasticsearch/data
    ports:
      - '9200:9200'
    networks:
      - elastic
    env_file:
      - ./backend/.env

  es02:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es02
    environment:
      - node.name=es02
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es03
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data02:/usr/share/elasticsearch/data
    networks:
      - elastic
    env_file:
      - ./backend/.env

  es03:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.9.1
    container_name: es03
    environment:
      - node.name=es03
      - cluster.name=es-docker-cluster
      - discovery.seed_hosts=es01,es02
      - cluster.initial_master_nodes=es01,es02,es03
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    volumes:
      - data03:/usr/share/elasticsearch/data
    networks:
      - elastic
    env_file:
      - ./backend/.env

networks:
  app-network:
    driver: bridge
  elastic:
    driver: bridge
volumes:
  red_data: {}
  data01:
    driver: local
  data02:
    driver: local
  data03:
    driver: local
